{"version":3,"sources":["../src/fs/nodefs.ts"],"sourcesContent":["import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { FilesystemBase } from \"./types.js\";\nimport { PGDATA } from \"./index.js\";\nimport type { EmPostgres } from \"../postgres.js\";\n\nexport class NodeFS extends FilesystemBase {\n  protected rootDir: string;\n\n  constructor(dataDir: string) {\n    super(dataDir);\n    this.rootDir = path.resolve(dataDir);\n    if (!fs.existsSync(path.join(this.rootDir, \"PG_VERSION\"))) {\n      fs.mkdirSync(this.rootDir);\n    }\n  }\n\n  async emscriptenOpts(opts: Partial<EmPostgres>) {\n    const options: Partial<EmPostgres> = {\n      ...opts,\n      preRun: [\n        ...(opts.preRun || []),\n        (mod: any) => {\n          const nodefs = mod.FS.filesystems.NODEFS;\n          mod.FS.mkdir(PGDATA);\n          mod.FS.mount(nodefs, { root: this.rootDir }, PGDATA);\n        },\n      ],\n    };\n    return options;\n  }\n}\n"],"mappings":"uFAAAA,IAAA,UAAYC,MAAQ,KACpB,UAAYC,MAAU,OAKf,IAAMC,EAAN,cAAqBC,CAAe,CAGzC,YAAYC,EAAiB,CAC3B,MAAMA,CAAO,EACb,KAAK,QAAe,UAAQA,CAAO,EAC3B,aAAgB,OAAK,KAAK,QAAS,YAAY,CAAC,GACnD,YAAU,KAAK,OAAO,CAE7B,CAEA,MAAM,eAAeC,EAA2B,CAY9C,MAXqC,CACnC,GAAGA,EACH,OAAQ,CACN,GAAIA,EAAK,QAAU,CAAC,EACnBC,GAAa,CACZ,IAAMC,EAASD,EAAI,GAAG,YAAY,OAClCA,EAAI,GAAG,MAAME,CAAM,EACnBF,EAAI,GAAG,MAAMC,EAAQ,CAAE,KAAM,KAAK,OAAQ,EAAGC,CAAM,CACrD,CACF,CACF,CAEF,CACF","names":["init_buffer","fs","path","NodeFS","FilesystemBase","dataDir","opts","mod","nodefs","PGDATA"]}